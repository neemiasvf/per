# Designed and expected to run on specific shell-based runners
# that already have this kind of environment setup.
# Validated at https://gitlab.com/ci/lint

# Variables
variables:
  GIT_STRATEGY: fetch
  RUBY_VERSION: 2.3.3
  RUBY_GEMSET: per


# Stages
stages:
  - prepare
  - test
  - deploy


# Templates
.job_template: &prepare
  stage: prepare
  tags:
    - ruby
    - postgres
    - linux
  before_script:
    - \curl -sSL https://get.rvm.io | bash -s stable --ignore-dotfiles --version latest
    - rvm reload
    - rvm install $RUBY_VERSION --default
    - rvm use @global
    - gem update --system --no-ri --no-rdoc
    - gem update --no-ri --no-rdoc
    - gem install bundler --no-ri --no-rdoc
    - gem cleanup
    - rvm $RUBY_VERSION@$RUBY_GEMSET

.job_template: &test
  stage: test
  tags:
    - ruby
    - postgres
    - linux
  before_script:
    - rvm gemset list
    - rvm $RUBY_VERSION@$RUBY_GEMSET

.job_template: &deploy
  stage: deploy
  tags:
    - ruby
    - postgres
    - linux
  before_script:
    - rvm gemset list
    - rvm $RUBY_VERSION@$RUBY_GEMSET
  environment:
    name: staging
  only:
    - staging
  when: on_success


# Jobs
prepare test:
  <<: *prepare
  script:
    - bundle install --system --without development production
    - RAILS_ENV=test bundle exec rake db:migrate:reset
    - RAILS_ENV=test bundle exec rake db:test:prepare

prepare auto deploy:
  <<: *prepare
  script:
    - bundle install --system --with development production
    - bundle install --path /var/www/$RUBY_GEMSET/shared/bundle --with development production
    - RAILS_ENV=production bundle exec rake db:create
  environment:
    name: staging
  only:
    - staging

rspec:
  <<: *test
  script: bundle exec rspec

cucumber:
  <<: *test
  script: bundle exec cucumber

auto deploy staging:
  <<: *deploy
  script:
    - bundle exec cap staging deploy
  environment:
    name: staging
    url: http://per.neemiasvf.me